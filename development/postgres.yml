apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: lupinemoon
spec:
  replicas: 1
  minReadySeconds: 30
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - image: postgres:11
          imagePullPolicy: IfNotPresent
          name: postgres-container
          env:
            - name: POSTGRES_DB
              value: lupinemoon
            - name: POSTGRES_USER
              value: master
            - name: POSTGRES_PASSWORD
              value: masterkey
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: postgres-db-scripts
              mountPath: /docker-entrypoint-initdb.d
            - name: postgres-storage
              mountPath: /var/lib/postgresql/db-data
      volumes:
        - name: postgres-db-scripts
          configMap:
            name: postgres-initdb
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-lupinemoon-service
  namespace: lupinemoon
  labels:
    app: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - name: postgres
      port: 5432
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  namespace: lupinemoon
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb
  namespace: lupinemoon
data:
  create_and_seed.sql: |
    -- CREATE
    SET search_path TO lupinemoon;
    CREATE SCHEMA IF NOT EXISTS auth;

    BEGIN;

    CREATE TABLE IF NOT EXISTS auth.role (
        id SERIAL NOT NULL,
        "name" character varying(255),
        "value" character varying(255),
        created_at TIMESTAMP NOT NULL DEFAULT NOW(),
        updated_at TIMESTAMP NOT NULL DEFAULT NOW(),
        deleted_at TIMESTAMP DEFAULT NULL,
        PRIMARY KEY (id)
    );

    COMMIT;

    BEGIN;

    CREATE TABLE IF NOT EXISTS auth.user (
        id SERIAL NOT NULL,
        username varchar(255) DEFAULT NULL,
        password varchar(255) DEFAULT NULL,
        email_address varchar(255) DEFAULT NULL,
        last_logged_in_at TIMESTAMP NOT NULL DEFAULT NOW(),
        enabled boolean default false,
        created_at TIMESTAMP NOT NULL DEFAULT NOW(),
        updated_at TIMESTAMP NOT NULL DEFAULT NOW(),
        deleted_at TIMESTAMP DEFAULT NULL,
        PRIMARY KEY (id)
    );

    COMMIT;

    BEGIN;

    CREATE TABLE IF NOT EXISTS auth.user_role (
        user_id bigint NOT NULL,
        role_id bigint NOT NULL,
        PRIMARY KEY (user_id, role_id)
    );

    COMMIT;

    CREATE SCHEMA IF NOT EXISTS registration;

    BEGIN;


    CREATE TABLE IF NOT EXISTS registration.contact_us (
        id SERIAL NOT NULL,
        first_name character varying(255),
        last_name character varying(255),
        email_address character varying(255),
        "message" character varying,
        created_at TIMESTAMP NOT NULL DEFAULT NOW(),
        updated_at TIMESTAMP NOT NULL DEFAULT NOW(),
        deleted_at TIMESTAMP DEFAULT NULL,
        PRIMARY KEY (id)
    );

    CREATE TABLE IF NOT EXISTS registration.early_access (
        id SERIAL NOT NULL,
        email_address character varying(255),
        created_at TIMESTAMP NOT NULL DEFAULT NOW(),
        updated_at TIMESTAMP NOT NULL DEFAULT NOW(),
        deleted_at TIMESTAMP DEFAULT NULL,
        PRIMARY KEY (id)
    );

    COMMIT;

    -- SEED
    BEGIN;

    INSERT INTO "auth"."user" (id, username, password, email_address, enabled) VALUES
    (1, 'admin', '$2a$10$/s3X8BwB3WWhlJf1pusocumnwYdo3e3Y41pT.qiQ.1qCEHeIedsri', 'admin@devenv.com', true),
    (2, 'nic', '$2a$10$149kqNNXB4rfUI3QUceAsOdh.0NgPTYaQsTs.lxE1eUgASoTsUT3S', 'nic@devenv.com', true);

    INSERT INTO "auth"."role" (id, "name", "value") VALUES
    (1, 'administrator', 'admin'),
    (2, 'user', 'user');

    INSERT INTO "auth"."user_role" (user_id, role_id) VALUES
    (1, 1),
    (2, 2);

    COMMIT;
